2024-04-09T21:40:48.494 helix_lsp::transport [INFO] python-ruff -> {"jsonrpc":"2.0","method":"initialize","params":{"capabilities":{"general":{"positionEncodings":["utf-8","utf-32","utf-16"]},"textDocument":{"codeAction":{"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}},"dataSupport":true,"disabledSupport":true,"isPreferredSupport":true,"resolveSupport":{"properties":["edit","command"]}},"completion":{"completionItem":{"deprecatedSupport":true,"insertReplaceSupport":true,"resolveSupport":{"properties":["documentation","detail","additionalTextEdits"]},"snippetSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{}},"hover":{"contentFormat":["markdown"]},"inlayHint":{"dynamicRegistration":false},"publishDiagnostics":{"tagSupport":{"valueSet":[1,2]},"versionSupport":true},"rename":{"dynamicRegistration":false,"honorsChangeAnnotations":false,"prepareSupport":true},"signatureHelp":{"signatureInformation":{"activeParameterSupport":true,"documentationFormat":["markdown"],"parameterInformation":{"labelOffsetSupport":true}}}},"window":{"workDoneProgress":true},"workspace":{"applyEdit":true,"configuration":true,"didChangeConfiguration":{"dynamicRegistration":false},"didChangeWatchedFiles":{"dynamicRegistration":true,"relativePatternSupport":false},"executeCommand":{"dynamicRegistration":false},"fileOperations":{"didRename":true,"willRename":true},"inlayHint":{"refreshSupport":false},"symbol":{"dynamicRegistration":false},"workspaceEdit":{"documentChanges":true,"failureHandling":"abort","normalizesLineEndings":false,"resourceOperations":["create","rename","delete"]},"workspaceFolders":true}},"clientInfo":{"name":"helix","version":"24.3 (2cadec0b)"},"processId":173337,"rootPath":"/home/ver/.dotfiles","rootUri":"file:///home/ver/.dotfiles","workspaceFolders":[{"name":".dotfiles","uri":"file:///home/ver/.dotfiles"}]},"id":0}
2024-04-09T21:40:48.852 helix_lsp::transport [INFO] python-ruff <- {"params": {"type": 4, "message": "Workspace settings: null"}, "method": "window/logMessage", "jsonrpc": "2.0"}
2024-04-09T21:40:48.852 helix_lsp::transport [INFO] python-ruff <- {"params": {"type": 4, "message": "Global settings: {}"}, "method": "window/logMessage", "jsonrpc": "2.0"}
2024-04-09T21:40:48.852 helix_term::application [INFO] window/logMessage: LogMessageParams { typ: Log, message: "Workspace settings: null" }
2024-04-09T21:40:48.852 helix_term::application [INFO] window/logMessage: LogMessageParams { typ: Log, message: "Global settings: {}" }
2024-04-09T21:40:48.855 helix_lsp::transport [INFO] python-ruff <- {"id": 0, "jsonrpc": "2.0", "result": {"capabilities": {"positionEncoding": "utf-16", "textDocumentSync": {"openClose": true, "change": 2, "save": true}, "hoverProvider": true, "codeActionProvider": {"codeActionKinds": ["quickfix", "source.fixAll", "source.organizeImports", "source.fixAll.ruff", "source.organizeImports.ruff", "notebook.source.fixAll", "notebook.source.organizeImports", "notebook.source.fixAll.ruff", "notebook.source.organizeImports.ruff"], "resolveProvider": true}, "documentFormattingProvider": true, "documentRangeFormattingProvider": {"documentSelector": [{"language": "python", "scheme": "file"}, {"language": "python", "scheme": "untitled"}], "rangesSupport": false, "workDoneProgress": false}, "executeCommandProvider": {"commands": ["ruff.applyAutofix", "ruff.applyOrganizeImports", "ruff.applyFormat"]}, "workspace": {"workspaceFolders": {"supported": true, "changeNotifications": true}, "fileOperations": {}}}, "serverInfo": {"name": "Ruff", "version": "0.0.53"}}}
2024-04-09T21:40:48.855 helix_lsp::transport [INFO] python-ruff <- {"capabilities":{"codeActionProvider":{"codeActionKinds":["quickfix","source.fixAll","source.organizeImports","source.fixAll.ruff","source.organizeImports.ruff","notebook.source.fixAll","notebook.source.organizeImports","notebook.source.fixAll.ruff","notebook.source.organizeImports.ruff"],"resolveProvider":true},"documentFormattingProvider":true,"documentRangeFormattingProvider":{"documentSelector":[{"language":"python","scheme":"file"},{"language":"python","scheme":"untitled"}],"rangesSupport":false,"workDoneProgress":false},"executeCommandProvider":{"commands":["ruff.applyAutofix","ruff.applyOrganizeImports","ruff.applyFormat"]},"hoverProvider":true,"positionEncoding":"utf-16","textDocumentSync":{"change":2,"openClose":true,"save":true},"workspace":{"fileOperations":{},"workspaceFolders":{"changeNotifications":true,"supported":true}}},"serverInfo":{"name":"Ruff","version":"0.0.53"}}
2024-04-09T21:40:48.856 helix_lsp::transport [INFO] python-ruff -> {"jsonrpc":"2.0","method":"initialized","params":{}}
2024-04-09T21:40:48.856 helix_lsp::transport [INFO] python-ruff -> {"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"languageId":"python","text":"import subprocess\n\n# function to parse output of command \"wpctl status\" and return a dictionary of sinks with their id and name.\ndef parse_wpctl_status():\n    # Execute the wpctl status command and store the output in a variable.\n    output = str(subprocess.check_output(\"wpctl status\", shell=True, encoding='utf-8'))\n\n    # remove the ascii tree characters and return a list of lines\n    lines = output.replace(\"├\", \"\").replace(\"─\", \"\").replace(\"│\", \"\").replace(\"└\", \"\").splitlines()\n\n    # get the index of the Sinks line as a starting point\n    sinks_index = None\n    for index, line in enumerate(lines):\n        if \"Sinks:\" in line:\n            sinks_index = index\n            break\n\n    # start by getting the lines after \"Sinks:\" and before the next blank line and store them in a list\n    sinks = []\n    for line in lines[sinks_index +1:]:\n        if not line.strip():\n            break\n        sinks.append(line.strip())\n\n    # remove the \"[vol:\" from the end of the sink name\n    for index, sink in enumerate(sinks):\n        sinks[index] = sink.split(\"[vol:\")[0].strip()\n    \n    # strip the * from the default sink and instead append \"- Default\" to the end. Looks neater in the wofi list this way.\n    for index, sink in enumerate(sinks):\n        if sink.startswith(\"*\"):\n            sinks[index] = sink.strip().replace(\"*\", \"\").strip() + \" - Default\"\n\n    # make the dictionary in this format {'sink_id': <int>, 'sink_name': <str>}\n    sinks_dict = [{\"sink_id\": int(sink.split(\".\")[0]), \"sink_name\": sink.split(\".\")[1].strip()} for sink in sinks]\n\n    return sinks_dict\n\n# get the list of sinks ready to put into wofi - highlight the current default sink\noutput = ''\nsinks = parse_wpctl_status()\nfor items in sinks:\n    if items['sink_name'].endswith(\" - Default\"):\n        output += f\"<b>-> {items['sink_name']}</b>\\n\"\n    else:\n        output += f\"{items['sink_name']}\\n\"\n\n# Call wofi and show the list. take the selected sink name and set it as the default sink\nwofi_command = f\"echo '{output}' | wofi --show=dmenu --hide-scroll --allow-markup --define=hide_search=true --location=top_right --width=600 --height=200 --xoffset=-60\"\nwofi_process = subprocess.run(wofi_command, shell=True, encoding='utf-8', stdout=subprocess.PIPE, stderr=subprocess.PIPE)\n\nif wofi_process.returncode != 0:\n    print(\"User cancelled the operation.\")\n    exit(0)\n\nselected_sink_name = wofi_process.stdout.strip()\nsinks = parse_wpctl_status()\nselected_sink = next(sink for sink in sinks if sink['sink_name'] == selected_sink_name)\nsubprocess.run(f\"wpctl set-default {selected_sink['sink_id']}\", shell=True)","uri":"file:///home/ver/.dotfiles/scripts/audio_changer.py","version":0}}}
2024-04-09T21:40:48.857 helix_lsp::transport [INFO] python-ruff <- {"params": {"type": 4, "message": "Interpreter executable (/nix/store/gd3shnza1i50zn8zs04fa729ribr88m9-python3-3.11.8/bin/ruff) not found"}, "method": "window/logMessage", "jsonrpc": "2.0"}
2024-04-09T21:40:48.857 helix_term::application [INFO] window/logMessage: LogMessageParams { typ: Log, message: "Interpreter executable (/nix/store/gd3shnza1i50zn8zs04fa729ribr88m9-python3-3.11.8/bin/ruff) not found" }
2024-04-09T21:40:48.857 helix_lsp::transport [INFO] python-ruff <- {"params": {"type": 4, "message": "Using environment executable: /nix/store/0gdvkv4gy57cqbpk0msz1zg0qlabmc3n-ruff-0.3.5/bin/ruff"}, "method": "window/logMessage", "jsonrpc": "2.0"}
2024-04-09T21:40:48.857 helix_term::application [INFO] window/logMessage: LogMessageParams { typ: Log, message: "Using environment executable: /nix/store/0gdvkv4gy57cqbpk0msz1zg0qlabmc3n-ruff-0.3.5/bin/ruff" }
2024-04-09T21:40:48.860 helix_lsp::transport [INFO] python-ruff <- {"params": {"type": 4, "message": "Inferred version 0.3.5 for: /nix/store/0gdvkv4gy57cqbpk0msz1zg0qlabmc3n-ruff-0.3.5/bin/ruff"}, "method": "window/logMessage", "jsonrpc": "2.0"}
2024-04-09T21:40:48.860 helix_term::application [INFO] window/logMessage: LogMessageParams { typ: Log, message: "Inferred version 0.3.5 for: /nix/store/0gdvkv4gy57cqbpk0msz1zg0qlabmc3n-ruff-0.3.5/bin/ruff" }
2024-04-09T21:40:48.860 helix_lsp::transport [INFO] python-ruff <- {"params": {"type": 4, "message": "Found ruff 0.3.5 at /nix/store/0gdvkv4gy57cqbpk0msz1zg0qlabmc3n-ruff-0.3.5/bin/ruff"}, "method": "window/logMessage", "jsonrpc": "2.0"}
2024-04-09T21:40:48.860 helix_term::application [INFO] window/logMessage: LogMessageParams { typ: Log, message: "Found ruff 0.3.5 at /nix/store/0gdvkv4gy57cqbpk0msz1zg0qlabmc3n-ruff-0.3.5/bin/ruff" }
2024-04-09T21:40:48.860 helix_lsp::transport [INFO] python-ruff <- {"params": {"type": 4, "message": "Running Ruff with: /nix/store/0gdvkv4gy57cqbpk0msz1zg0qlabmc3n-ruff-0.3.5/bin/ruff ['check', '--force-exclude', '--no-cache', '--no-fix', '--quiet', '--output-format', 'json', '-', '--stdin-filename', '/home/ver/.dotfiles/scripts/audio_changer.py']"}, "method": "window/logMessage", "jsonrpc": "2.0"}
2024-04-09T21:40:48.860 helix_term::application [INFO] window/logMessage: LogMessageParams { typ: Log, message: "Running Ruff with: /nix/store/0gdvkv4gy57cqbpk0msz1zg0qlabmc3n-ruff-0.3.5/bin/ruff ['check', '--force-exclude', '--no-cache', '--no-fix', '--quiet', '--output-format', 'json', '-', '--stdin-filename', '/home/ver/.dotfiles/scripts/audio_changer.py']" }
2024-04-09T21:40:48.866 helix_lsp::transport [INFO] python-ruff <- {"params": {"uri": "file:///home/ver/.dotfiles/scripts/audio_changer.py", "diagnostics": []}, "method": "textDocument/publishDiagnostics", "jsonrpc": "2.0"}
2024-04-09T21:41:46.929 helix_lsp::transport [INFO] python-ruff -> {"jsonrpc":"2.0","method":"textDocument/didChange","params":{"contentChanges":[{"range":{"end":{"character":0,"line":0},"start":{"character":0,"line":0}},"text":"    "}],"textDocument":{"uri":"file:///home/ver/.dotfiles/scripts/audio_changer.py","version":1}}}
2024-04-09T21:41:46.933 helix_lsp::transport [INFO] python-ruff <- {"params": {"type": 4, "message": "Interpreter executable (/nix/store/gd3shnza1i50zn8zs04fa729ribr88m9-python3-3.11.8/bin/ruff) not found"}, "method": "window/logMessage", "jsonrpc": "2.0"}
2024-04-09T21:41:46.933 helix_lsp::transport [INFO] python-ruff <- {"params": {"type": 4, "message": "Using environment executable: /nix/store/0gdvkv4gy57cqbpk0msz1zg0qlabmc3n-ruff-0.3.5/bin/ruff"}, "method": "window/logMessage", "jsonrpc": "2.0"}
2024-04-09T21:41:46.933 helix_lsp::transport [INFO] python-ruff <- {"params": {"type": 4, "message": "Found ruff 0.3.5 at /nix/store/0gdvkv4gy57cqbpk0msz1zg0qlabmc3n-ruff-0.3.5/bin/ruff"}, "method": "window/logMessage", "jsonrpc": "2.0"}
2024-04-09T21:41:46.933 helix_lsp::transport [INFO] python-ruff <- {"params": {"type": 4, "message": "Running Ruff with: /nix/store/0gdvkv4gy57cqbpk0msz1zg0qlabmc3n-ruff-0.3.5/bin/ruff ['check', '--force-exclude', '--no-cache', '--no-fix', '--quiet', '--output-format', 'json', '-', '--stdin-filename', '/home/ver/.dotfiles/scripts/audio_changer.py']"}, "method": "window/logMessage", "jsonrpc": "2.0"}
2024-04-09T21:41:46.938 helix_lsp::transport [INFO] python-ruff <- {"params": {"uri": "file:///home/ver/.dotfiles/scripts/audio_changer.py", "diagnostics": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 1}}, "message": "SyntaxError: Unexpected token Indent", "severity": 1, "code": "E999", "codeDescription": {"href": "https://docs.astral.sh/ruff/rules/syntax-error"}, "source": "Ruff", "data": {"fix": null, "noqa_row": 1, "cell": null}}]}, "method": "textDocument/publishDiagnostics", "jsonrpc": "2.0"}
2024-04-09T21:41:46.943 helix_vcs::diff::worker [INFO] Diff computation timed out, update of diffs might appear delayed
2024-04-09T21:41:46.943 helix_term::application [INFO] window/logMessage: LogMessageParams { typ: Log, message: "Interpreter executable (/nix/store/gd3shnza1i50zn8zs04fa729ribr88m9-python3-3.11.8/bin/ruff) not found" }
2024-04-09T21:41:46.943 helix_term::application [INFO] window/logMessage: LogMessageParams { typ: Log, message: "Using environment executable: /nix/store/0gdvkv4gy57cqbpk0msz1zg0qlabmc3n-ruff-0.3.5/bin/ruff" }
2024-04-09T21:41:46.943 helix_term::application [INFO] window/logMessage: LogMessageParams { typ: Log, message: "Found ruff 0.3.5 at /nix/store/0gdvkv4gy57cqbpk0msz1zg0qlabmc3n-ruff-0.3.5/bin/ruff" }
2024-04-09T21:41:46.943 helix_term::application [INFO] window/logMessage: LogMessageParams { typ: Log, message: "Running Ruff with: /nix/store/0gdvkv4gy57cqbpk0msz1zg0qlabmc3n-ruff-0.3.5/bin/ruff ['check', '--force-exclude', '--no-cache', '--no-fix', '--quiet', '--output-format', 'json', '-', '--stdin-filename', '/home/ver/.dotfiles/scripts/audio_changer.py']" }
2024-04-09T21:41:50.299 helix_lsp::transport [INFO] python-ruff -> {"jsonrpc":"2.0","method":"textDocument/formatting","params":{"options":{"insertSpaces":true,"tabSize":4},"textDocument":{"uri":"file:///home/ver/.dotfiles/scripts/audio_changer.py"}},"id":1}
2024-04-09T21:41:50.303 helix_lsp::transport [INFO] python-ruff <- {"params": {"type": 4, "message": "Interpreter executable (/nix/store/gd3shnza1i50zn8zs04fa729ribr88m9-python3-3.11.8/bin/ruff) not found"}, "method": "window/logMessage", "jsonrpc": "2.0"}
2024-04-09T21:41:50.303 helix_term::application [INFO] window/logMessage: LogMessageParams { typ: Log, message: "Interpreter executable (/nix/store/gd3shnza1i50zn8zs04fa729ribr88m9-python3-3.11.8/bin/ruff) not found" }
2024-04-09T21:41:50.303 helix_lsp::transport [INFO] python-ruff <- {"params": {"type": 4, "message": "Using environment executable: /nix/store/0gdvkv4gy57cqbpk0msz1zg0qlabmc3n-ruff-0.3.5/bin/ruff"}, "method": "window/logMessage", "jsonrpc": "2.0"}
2024-04-09T21:41:50.303 helix_term::application [INFO] window/logMessage: LogMessageParams { typ: Log, message: "Using environment executable: /nix/store/0gdvkv4gy57cqbpk0msz1zg0qlabmc3n-ruff-0.3.5/bin/ruff" }
2024-04-09T21:41:50.303 helix_lsp::transport [INFO] python-ruff <- {"params": {"type": 4, "message": "Found ruff 0.3.5 at /nix/store/0gdvkv4gy57cqbpk0msz1zg0qlabmc3n-ruff-0.3.5/bin/ruff"}, "method": "window/logMessage", "jsonrpc": "2.0"}
2024-04-09T21:41:50.303 helix_lsp::transport [INFO] python-ruff <- {"params": {"type": 4, "message": "Running Ruff with: /nix/store/0gdvkv4gy57cqbpk0msz1zg0qlabmc3n-ruff-0.3.5/bin/ruff ['format', '--force-exclude', '--quiet', '--stdin-filename', '/home/ver/.dotfiles/scripts/audio_changer.py']"}, "method": "window/logMessage", "jsonrpc": "2.0"}
2024-04-09T21:41:50.303 helix_term::application [INFO] window/logMessage: LogMessageParams { typ: Log, message: "Found ruff 0.3.5 at /nix/store/0gdvkv4gy57cqbpk0msz1zg0qlabmc3n-ruff-0.3.5/bin/ruff" }
2024-04-09T21:41:50.303 helix_term::application [INFO] window/logMessage: LogMessageParams { typ: Log, message: "Running Ruff with: /nix/store/0gdvkv4gy57cqbpk0msz1zg0qlabmc3n-ruff-0.3.5/bin/ruff ['format', '--force-exclude', '--quiet', '--stdin-filename', '/home/ver/.dotfiles/scripts/audio_changer.py']" }
2024-04-09T21:41:50.308 helix_lsp::transport [INFO] python-ruff <- {"id": 1, "jsonrpc": "2.0", "result": null}
2024-04-09T21:41:50.308 helix_lsp::transport [INFO] python-ruff <- null
2024-04-09T21:41:56.184 helix_lsp::transport [INFO] python-ruff -> {"jsonrpc":"2.0","method":"shutdown","id":2}
2024-04-09T21:41:56.186 helix_lsp::transport [INFO] python-ruff <- {"id": 2, "jsonrpc": "2.0", "result": null}
2024-04-09T21:41:56.186 helix_lsp::transport [INFO] python-ruff <- null
2024-04-09T21:41:56.186 helix_lsp::transport [INFO] python-ruff -> {"jsonrpc":"2.0","method":"exit"}
